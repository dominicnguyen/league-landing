.container {
  left: 0;
  @include transition( all 500ms cubic-bezier(0.51, 0, 0.6, 1) 0ms);
}

body:not(.transitioning) .next_page {
  z-index: -1;
}

$fadeout_pages: '.loading, .signin, .not_authorized .home';
// I ..guess.. we could do this with a loop
$to_fadeout_pages: '.to_loading, .to_signin, .to_not_authorized, .to_home';


// what the current page does:
.transitioning {
  
  //hide scrollbars
  article{
    overflow: hidden;
  }
  
  // normal pages go to the LHS
  .current_page {
    left: -100%;
    @include opacity(.2);
  }
  
  // except for going to the leagues page from the roster/season pages
  &.to_teams {
    &.from_games, &.from_players {
      .current_page {
        left: 100%;
      }
    }
  }
  
  // fade out pages get big and transparent
  #{$fadeout_pages} {
    &.current_page {
      left: 0;
      @include opacity(0);
      @include transform( scale(2) );
    }
  }
}

// transitioning to a fadeout page should just fade out
#{$to_fadeout_pages} {
  &.transitioning {
    .current_page {
      left: 0;
      @include opacity(0);
    }
  }
}

// what the next page does:
// normally starts to the RHS
.container.next_page {
  left: 100%;
  .transitioning & {
    left: 0;
  }
}

// and if the next page is the leagues page, it starts to the lhs
.next_page.teams {
  left: -100%;
}

#{$fadeout_pages} {
  // if a fade out page comes in, it zooms in
  &.next_page {
    left: 0;
    opacity: 0;
    @include transform( scale(2) );
    .transitioning & {
      opacity: 1;
      @include transform( scale(1) );
    }
  }

  // unless it s anything transitioning from a fadeout page, in which case it fades in without scale
  & + .container.next_page {
    left: 0;
    opacity: 0;
    @include transform( scale(1) );
    .transitioning & {
      opacity: 1;
    }
  }
}